#!/usr/bin/env bash
# Copyright (c) 2019-2020 Martin Dimov. All rights reserved.

# make dbus happy
export DISPLAY=:0
export LANG=en_US.UTF-8
export "$(grep -z "^DBUS_SESSION_BUS_ADDRESS=" "/proc/$(pgrep "cinnamon-session*")/environ" | tr -d '\0')"

DBUS_NAME="org.mpris.MediaPlayer2.spotify"
OBJ_PATH="/org/mpris/MediaPlayer2"
INTERFACE="org.mpris.MediaPlayer2"

pcall() {
    dbus-send --type=method_call --dest=$DBUS_NAME $OBJ_PATH "$@"
}

formatify() {

    # XXX: replace all that with a big awk script?
    # XXX: live (at|in) ..

    # echo
    # convert non ascii symbols to their ascii counterpart (translit.)

    # remove square bracket details
    # remove "re-recorded" details
    # remove "version|edit|mix" details
    # remove "demo" tag
    # remove "remastered" details

    # replace two or more dots with dash
    # replace ampersand with 'and'
    # replace spaces with dashes
    # replace colons with dashes
    # replace dollar signs with dashes
    # remove all non (alphanumerical or dash) symbols
    # compress dashes
    # trim opening dash if exists
    # trim trailing dash if exists

    echo "$1"                                                          \
    | iconv -f utf-8 -t ascii//translit                                \
    | sed -E "s/\\[.*\]//i"                                            \
    | sed -E "s/(re-recorded|recorded at).*$//i"                       \
    | sed -E "s/(original |eurovicious |new |)(radio|rarities|piano|acoustic|stereo|mono|single|band|live|album)( lp|) (version|edit|mix)//i" \
    | sed -E "s/demo$//i"                                              \
    | sed -E "s/\-{0,1}([0-9]{4}.*|.)remaster(ed|).*$//i"              \
    | sed -E "s/\.{2,}/-/g"                                            \
    | sed "s/&/and/g"                                                  \
    | tr " " "-"                                                       \
    | tr ":" "-"                                                       \
    | tr "$" "-"                                                       \
    | tr -cd "[[:alnum:]]-"                                            \
    | tr -s "-"                                                        \
    | sed "s/^-//g"                                                    \
    | sed "s/-$//g"
}

get_metadata() {
    pcall --print-reply=literal "org.freedesktop.DBus.Properties.Get" "string:$INTERFACE.Player" "string:Metadata"
}

open_uri() {
    pcall $INTERFACE.Player.OpenUri string:"${1:8}"

    # sadly Spotify impl of MPRIS does not support 'Raise'
    # so we resort to abusing quirks - on success, Spotify pauses the
    # current song, thus title changes back to "Spotify [Premium]"

    # if one day they implement the 'Raise' method, switch to
    # pcall org.mpris.MediaPlayer2.Player.Raise

    # TODO: check for wmctrl before using
    wmctrl -a spotify
}

next_song() {
    pcall $INTERFACE.Player.Next
}

open_lyrics() {

    # BUGS:
    #  - current method, doesn't work with spotify connected devices
    #  - songs with multiple artists are broken, as only the first one
    #    is reported, but not always a problem.. fun right?

    # song metadata
    metadata=$(get_metadata)
      artist=$(grep -A1 "xesam:artist" <<< "$metadata" | tail -n1 | sed -E "s/^\s+(.*)\s+\]$/\1/")
       title=$(grep "xesam:title" <<< "$metadata" | sed -E "s/^\s+xesam:title\s+variant\s+(.*)\)$/\1/")

    # uri compatible data for lyrics match
    uri_artist=$(formatify "$artist")
     uri_title=$(formatify "$title")

    # lyrics providers
        genius="https://genius.com/$uri_artist-$uri_title-lyrics"
    musixmatch="https://www.musixmatch.com/lyrics/$uri_artist/$uri_title"

    # Genius is the superior service.
    lyrics_uri="$genius"

    # copy spotify share uri to clipboard
    copy_song_uri "$metadata"

    # open lyrics in browser
    #~ xdg-open $lyrics_uri

    # notification
    # TODO: check for libnotify
    notify-send --expire-time=3000 --icon="spotify" "lyrics" "<i>Spotify URI copied to clipboard.</i>\n \nLyrics: $lyrics_uri"
}

copy_song_uri() {
    uri=$(grep "xesam:url" <<< "$1" | sed -E "s/^\s+xesam:url\s+variant\s+(.*)\)$/\1/")
    # TODO: check for xclip
    xclip <(echo -n $uri)
}

case "$1:$5" in
    spotify:*)
    # spotify:uri
        open_uri "$1"
    ;;
    acpi:00001311)
    # FN + F12: acpi ibm/hotkey LEN0268:00 00000080 00001311
        open_lyrics
    ;;
    acpi:00001315)
    # FN + F11: acpi ibm/hotkey LEN0268:00 00000080 00001315
        next_song
    ;;
    *)
        exit 1
    ;;
esac

exit 0
